# The hello-server pod has two containers:
#   An HTTP server that displays "Hello, world"
#   A file integrity monitoring sidecar
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-server-deployment
  labels:
    app.kubernetes.io/name: hello
  annotations:
    # This annotation isn't actually used. It
    # would be nice if we had a dynamic admission
    # controller to generate the FIM container to
    # monitor the files specified via annotations.
    "hammingweight.com/monitored_files": "/home/hellouser/index.html"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: hello
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hello
    spec:
      name: hello-server
      shareProcessNamespace: true
      containers:
        # The "Hello, world" application container
        - image: docker.io/hammingweight/hello_server:1.0.0
          name: hello-server
          ports:
            - containerPort: 8000
              name: http
              protocol: TCP
          
        # The sidecar container
        - image: docker.io/hammingweight/fim:1.0.0
          name: fim
          # We need to run as privileged to access
          # the files in the hello-server container
          securityContext:
            capabilities:
              drop:
                - ALL
              add:
                - DAC_READ_SEARCH
                - KILL
                - SYS_PTRACE
          livenessProbe:
            # We check that the application server
            # hasn't been compromised by checking that
            # the hash of index.html is 746308...
            exec:
              command:
              - /bin/ash
              - /healthz
              - /home/hellouser/index.html
              - 746308829575e17c3331bbcb00c0898b
